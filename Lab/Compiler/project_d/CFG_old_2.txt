prog -> type main ( ) { stmts }
type -> int | char | string
stmts -> stmt stmts | stmt
stmt -> assignmentStmt | returnStmt | conditionalStmt | getStmt | putStmt | { stmts }
returnStmt -> return expr ;
assignmentStmt -> type id = expr ; | id = expr ;
conditionalStmt -> expr ? expr : expr ;
getStmt -> get id ;
putStmt -> put expr ;
arith_op -> + | - | *
relop -> < | > | ==
expr -> id expr' | num expr' | ( expr ) expr'
expr' -> arith_op expr expr' | relop expr expr' | EPSILON
id -> letter id' | letter
id' -> letter id' | digit id' | EPSILON
num -> digit num' | digit
num' -> digit num' | EPSILON
letter -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z
digit -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9