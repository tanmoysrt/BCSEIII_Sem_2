int main ( ) { int a = 5 ; get a ; put a ; return 0 ; }

> Tokens: 
int main ( ) { int a = 5 ; get a ; put a ; return 0 ; } 
--------------------

Symbol Table:
a = ( type : int, value : 0, scope: 1)
main = ( type : int, value : 0, scope: 0)
--------------------

> Production Rules : 

stmts -> stmt stmts 
stmts -> stmt 
conditionalStmt -> expr ? expr : expr ; 
num -> digit 
term' -> arith_op factor term' 
term' -> EPSILON 
returnStmt -> return expr ; 
type -> int 
type -> char 
type -> string 
arith_op -> + 
arith_op -> - 
arith_op -> * 
relop -> < 
relop -> > 
relop -> == 
prog -> type main ( ) { stmts } 
expr' -> relop term expr' 
expr' -> EPSILON 
letter -> a 
letter -> b 
letter -> c 
letter -> d 
letter -> e 
letter -> f 
letter -> g 
letter -> h 
letter -> i 
letter -> j 
letter -> k 
letter -> l 
letter -> m 
letter -> n 
letter -> o 
letter -> p 
letter -> q 
letter -> r 
letter -> s 
letter -> t 
letter -> u 
letter -> v 
letter -> w 
letter -> x 
letter -> y 
letter -> z 
expr -> term expr' 
term -> factor term' 
getStmt -> get id ; 
id -> letter 
putStmt -> put expr ; 
factor -> id 
factor -> num 
factor -> ( expr ) 
assignmentStmt -> id = expr ; 
stmt -> assignmentStmt 
stmt -> returnStmt 
stmt -> conditionalStmt 
stmt -> getStmt 
stmt -> putStmt 
stmt -> { stmts } 
digit -> 0 
digit -> 1 
digit -> 2 
digit -> 3 
digit -> 4 
digit -> 5 
digit -> 6 
digit -> 7 
digit -> 8 
digit -> 9 
--------------------

> First Set : 

stmts -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, return]
conditionalStmt -> [a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z]
num -> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
term' -> [*, +, -, EPSILON]
returnStmt -> [return]
type -> [string, char, int]
arith_op -> [*, +, -]
relop -> [==, <, >]
prog -> [string, char, int]
expr' -> [==, <, >, EPSILON]
letter -> [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]
expr -> [a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z]
term -> [a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z]
getStmt -> [get]
id -> [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]
putStmt -> [put]
factor -> [a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z]
assignmentStmt -> [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]
stmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, return]
digit -> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

--------------------


> Follow Set : 

stmts -> [}]
conditionalStmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, }, return]
num -> [==, ), *, :, +, ;, <, -, >, ?]
term' -> [==, ), :, ;, <, >, ?]
returnStmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, }, return]
type -> [main]
arith_op -> [a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z]
relop -> [a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z]
prog -> [$]
expr' -> [), :, ;, ?]
letter -> [==, ), *, :, ;, +, <, -, =, >, ?]
expr -> [), :, ;, ?]
term -> [==, ), :, ;, <, >, ?]
getStmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, }, return]
id -> [==, ), *, :, ;, +, <, -, =, >, ?]
putStmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, }, return]
factor -> [==, ), *, :, +, ;, <, -, >, ?]
assignmentStmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, }, return]
stmt -> [put, get, a, b, c, d, e, f, g, h, (, i, j, k, l, m, n, o, p, 0, q, 1, r, 2, s, 3, t, 4, u, 5, v, 6, w, 7, x, 8, y, 9, z, {, }, return]
digit -> [==, ), *, :, +, ;, <, -, >, ?]

--------------------

> LR(0) Item Sets : 

>> I0
prog' -> . prog 
type -> . int 
type -> . char 
type -> . string 
prog -> . type main ( ) { stmts } 

>> I1
prog -> type . main ( ) { stmts } 

>> I2
type -> string . 

>> I3
type -> int . 

>> I4
prog' -> prog . 

>> I5
type -> char . 

>> I6
prog -> type main . ( ) { stmts } 

>> I7
prog -> type main ( . ) { stmts } 

>> I8
prog -> type main ( ) . { stmts } 

>> I9
stmts -> . stmt stmts 
stmts -> . stmt 
conditionalStmt -> . expr ? expr : expr ; 
num -> . digit 
returnStmt -> . return expr ; 
prog -> type main ( ) { . stmts } 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
getStmt -> . get id ; 
id -> . letter 
putStmt -> . put expr ; 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
assignmentStmt -> . id = expr ; 
stmt -> . assignmentStmt 
stmt -> . returnStmt 
stmt -> . conditionalStmt 
stmt -> . getStmt 
stmt -> . putStmt 
stmt -> . { stmts } 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I10
factor -> num . 

>> I11
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
id -> . letter 
putStmt -> put . expr ; 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I12
factor -> id . 
assignmentStmt -> id . = expr ; 

>> I13
stmt -> putStmt . 

>> I14
num -> digit . 

>> I15
prog -> type main ( ) { stmts . } 

>> I16
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
id -> . letter 
factor -> ( . expr ) 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I17
stmt -> returnStmt . 

>> I18
digit -> 0 . 

>> I19
digit -> 1 . 

>> I20
digit -> 2 . 

>> I21
digit -> 3 . 

>> I22
digit -> 4 . 

>> I23
digit -> 5 . 

>> I24
digit -> 6 . 

>> I25
id -> letter . 

>> I26
digit -> 7 . 

>> I27
digit -> 8 . 

>> I28
digit -> 9 . 

>> I29
stmt -> getStmt . 

>> I30
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
getStmt -> get . id ; 
id -> . letter 

>> I31
conditionalStmt -> expr . ? expr : expr ; 

>> I32
expr' -> . relop term expr' 
expr' -> . EPSILON 
expr -> term . expr' 
relop -> . < 
relop -> . > 
relop -> . == 

>> I33
term' -> . arith_op factor term' 
term' -> . EPSILON 
term -> factor . term' 
arith_op -> . + 
arith_op -> . - 
arith_op -> . * 

>> I34
stmt -> assignmentStmt . 

>> I35
letter -> a . 

>> I36
letter -> b . 

>> I37
letter -> c . 

>> I38
letter -> d . 

>> I39
stmt -> conditionalStmt . 

>> I40
letter -> e . 

>> I41
letter -> f . 

>> I42
letter -> g . 

>> I43
letter -> h . 

>> I44
letter -> i . 

>> I45
letter -> j . 

>> I46
letter -> k . 

>> I47
letter -> l . 

>> I48
letter -> m . 

>> I49
letter -> n . 

>> I50
letter -> o . 

>> I51
letter -> p . 

>> I52
letter -> q . 

>> I53
letter -> r . 

>> I54
letter -> s . 

>> I55
letter -> t . 

>> I56
letter -> u . 

>> I57
letter -> v . 

>> I58
letter -> w . 

>> I59
letter -> x . 

>> I60
letter -> y . 

>> I61
letter -> z . 

>> I62
stmts -> . stmt stmts 
stmts -> . stmt 
conditionalStmt -> . expr ? expr : expr ; 
num -> . digit 
returnStmt -> . return expr ; 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
getStmt -> . get id ; 
id -> . letter 
putStmt -> . put expr ; 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
assignmentStmt -> . id = expr ; 
stmt -> { . stmts } 
stmt -> . assignmentStmt 
stmt -> . returnStmt 
stmt -> . conditionalStmt 
stmt -> . getStmt 
stmt -> . putStmt 
stmt -> . { stmts } 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I63
stmts -> stmt . stmts 
stmts -> stmt . 
stmts -> . stmt stmts 
stmts -> . stmt 
conditionalStmt -> . expr ? expr : expr ; 
num -> . digit 
returnStmt -> . return expr ; 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
getStmt -> . get id ; 
id -> . letter 
putStmt -> . put expr ; 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
assignmentStmt -> . id = expr ; 
stmt -> . assignmentStmt 
stmt -> . returnStmt 
stmt -> . conditionalStmt 
stmt -> . getStmt 
stmt -> . putStmt 
stmt -> . { stmts } 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I64
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
returnStmt -> return . expr ; 
id -> . letter 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I65
factor -> id . 

>> I66
putStmt -> put expr . ; 

>> I67
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
id -> . letter 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
assignmentStmt -> id = . expr ; 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I68
prog -> type main ( ) { stmts } . 

>> I69
factor -> ( expr . ) 

>> I70
getStmt -> get id . ; 

>> I71
conditionalStmt -> expr ? . expr : expr ; 
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
id -> . letter 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I72
expr -> term expr' . 

>> I73
relop -> == . 

>> I74
relop -> < . 

>> I75
relop -> > . 

>> I76
expr' -> relop . term expr' 
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
term -> . factor term' 
id -> . letter 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I77
term -> factor term' . 

>> I78
arith_op -> * . 

>> I79
arith_op -> + . 

>> I80
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
term' -> arith_op . factor term' 
id -> . letter 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I81
arith_op -> - . 

>> I82
stmt -> { stmts . } 

>> I83
stmts -> stmt stmts . 

>> I84
returnStmt -> return expr . ; 

>> I85
putStmt -> put expr ; . 

>> I86
assignmentStmt -> id = expr . ; 

>> I87
factor -> ( expr ) . 

>> I88
getStmt -> get id ; . 

>> I89
conditionalStmt -> expr ? expr . : expr ; 

>> I90
expr' -> relop term . expr' 
expr' -> . relop term expr' 
expr' -> . EPSILON 
relop -> . < 
relop -> . > 
relop -> . == 

>> I91
term' -> arith_op factor . term' 
term' -> . arith_op factor term' 
term' -> . EPSILON 
arith_op -> . + 
arith_op -> . - 
arith_op -> . * 

>> I92
stmt -> { stmts } . 

>> I93
returnStmt -> return expr ; . 

>> I94
assignmentStmt -> id = expr ; . 

>> I95
conditionalStmt -> expr ? expr : . expr ; 
num -> . digit 
letter -> . a 
letter -> . b 
letter -> . c 
letter -> . d 
letter -> . e 
letter -> . f 
letter -> . g 
letter -> . h 
letter -> . i 
letter -> . j 
letter -> . k 
letter -> . l 
letter -> . m 
letter -> . n 
letter -> . o 
letter -> . p 
letter -> . q 
letter -> . r 
letter -> . s 
letter -> . t 
letter -> . u 
letter -> . v 
letter -> . w 
letter -> . x 
letter -> . y 
letter -> . z 
expr -> . term expr' 
term -> . factor term' 
id -> . letter 
factor -> . id 
factor -> . num 
factor -> . ( expr ) 
digit -> . 0 
digit -> . 1 
digit -> . 2 
digit -> . 3 
digit -> . 4 
digit -> . 5 
digit -> . 6 
digit -> . 7 
digit -> . 8 
digit -> . 9 

>> I96
expr' -> relop term expr' . 

>> I97
term' -> arith_op factor term' . 

>> I98
conditionalStmt -> expr ? expr : expr . ; 

>> I99
conditionalStmt -> expr ? expr : expr ; . 


> SLR Parsing Table : 

State	num		main		type		put		expr'		id		putStmt		digit		==		stmts		$		(		term'		)		*		returnStmt		+		arith_op		-		0		1		2		3		4		5		6		letter		7		8		9		:		;		getStmt		<		=		>		?		string		relop		get		expr		term		factor		assignmentStmt		a		b		c		d		conditionalStmt		e		f		g		h		i		j		k		l		m		int		prog		n		o		p		q		r		s		t		u		v		w		char		x		y		z		{		}		stmt		return		
0						1																																																																					S_2																																									S_3	4																					S_5															
1				S_6																																																																																																																																																									
2				R_type_2																																																																																																																																																									
3				R_type_0																																																																																																																																																									
4																						ACC																																																																																																																																							
5				R_type_1																																																																																																																																																									
6																								S_7																																																																																																																																					
7																												S_8																																																																																																																																	
8																																																																																																																																																						S_9							
9		10					S_11			12	13	14			15			S_16							17							S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28					29													S_30	31	32	33	34	S_35	S_36	S_37	S_38	39	S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61	S_62			63	S_64	
10																		R_factor_1									R_factor_1	R_factor_1			R_factor_1			R_factor_1																							R_factor_1	R_factor_1			R_factor_1			R_factor_1	R_factor_1																																																																																			
11		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																					66	32	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
12																		R_factor_0									R_factor_0	R_factor_0			R_factor_0			R_factor_0																							R_factor_0	R_factor_0			R_factor_0	S_67	R_factor_0	R_factor_0																																																																																			
13								R_stmt_4															R_stmt_4															R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4			R_stmt_4	R_stmt_4	R_stmt_4																			R_stmt_4									R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4			R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4					R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4			R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4	R_stmt_4			R_stmt_4	
14																		R_num_0									R_num_0	R_num_0			R_num_0			R_num_0																							R_num_0	R_num_0			R_num_0			R_num_0	R_num_0																																																																																			
15																																																																																																																																																								S_68					
16		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																					69	32	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
17								R_stmt_1															R_stmt_1															R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1			R_stmt_1	R_stmt_1	R_stmt_1																			R_stmt_1									R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1			R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1					R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1			R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1	R_stmt_1			R_stmt_1	
18																		R_digit_0									R_digit_0	R_digit_0			R_digit_0			R_digit_0																							R_digit_0	R_digit_0			R_digit_0			R_digit_0	R_digit_0																																																																																			
19																		R_digit_1									R_digit_1	R_digit_1			R_digit_1			R_digit_1																							R_digit_1	R_digit_1			R_digit_1			R_digit_1	R_digit_1																																																																																			
20																		R_digit_2									R_digit_2	R_digit_2			R_digit_2			R_digit_2																							R_digit_2	R_digit_2			R_digit_2			R_digit_2	R_digit_2																																																																																			
21																		R_digit_3									R_digit_3	R_digit_3			R_digit_3			R_digit_3																							R_digit_3	R_digit_3			R_digit_3			R_digit_3	R_digit_3																																																																																			
22																		R_digit_4									R_digit_4	R_digit_4			R_digit_4			R_digit_4																							R_digit_4	R_digit_4			R_digit_4			R_digit_4	R_digit_4																																																																																			
23																		R_digit_5									R_digit_5	R_digit_5			R_digit_5			R_digit_5																							R_digit_5	R_digit_5			R_digit_5			R_digit_5	R_digit_5																																																																																			
24																		R_digit_6									R_digit_6	R_digit_6			R_digit_6			R_digit_6																							R_digit_6	R_digit_6			R_digit_6			R_digit_6	R_digit_6																																																																																			
25																		R_id_0									R_id_0	R_id_0			R_id_0			R_id_0																							R_id_0	R_id_0			R_id_0	R_id_0	R_id_0	R_id_0																																																																																			
26																		R_digit_7									R_digit_7	R_digit_7			R_digit_7			R_digit_7																							R_digit_7	R_digit_7			R_digit_7			R_digit_7	R_digit_7																																																																																			
27																		R_digit_8									R_digit_8	R_digit_8			R_digit_8			R_digit_8																							R_digit_8	R_digit_8			R_digit_8			R_digit_8	R_digit_8																																																																																			
28																		R_digit_9									R_digit_9	R_digit_9			R_digit_9			R_digit_9																							R_digit_9	R_digit_9			R_digit_9			R_digit_9	R_digit_9																																																																																			
29								R_stmt_3															R_stmt_3															R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3			R_stmt_3	R_stmt_3	R_stmt_3																			R_stmt_3									R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3			R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3					R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3			R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3	R_stmt_3			R_stmt_3	
30												70																																									25																																			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
31																																																																										S_71																																																																																			
32										72							S_73																																																	S_74			S_75					76																																																																															
33																										77			S_78			S_79	80	S_81																																																																																																																							
34								R_stmt_0															R_stmt_0															R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0			R_stmt_0	R_stmt_0	R_stmt_0																			R_stmt_0									R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0			R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0					R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0			R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0	R_stmt_0			R_stmt_0	
35																		R_letter_0									R_letter_0	R_letter_0			R_letter_0			R_letter_0																							R_letter_0	R_letter_0			R_letter_0	R_letter_0	R_letter_0	R_letter_0																																																																																			
36																		R_letter_1									R_letter_1	R_letter_1			R_letter_1			R_letter_1																							R_letter_1	R_letter_1			R_letter_1	R_letter_1	R_letter_1	R_letter_1																																																																																			
37																		R_letter_2									R_letter_2	R_letter_2			R_letter_2			R_letter_2																							R_letter_2	R_letter_2			R_letter_2	R_letter_2	R_letter_2	R_letter_2																																																																																			
38																		R_letter_3									R_letter_3	R_letter_3			R_letter_3			R_letter_3																							R_letter_3	R_letter_3			R_letter_3	R_letter_3	R_letter_3	R_letter_3																																																																																			
39								R_stmt_2															R_stmt_2															R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2			R_stmt_2	R_stmt_2	R_stmt_2																			R_stmt_2									R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2			R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2					R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2			R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2	R_stmt_2			R_stmt_2	
40																		R_letter_4									R_letter_4	R_letter_4			R_letter_4			R_letter_4																							R_letter_4	R_letter_4			R_letter_4	R_letter_4	R_letter_4	R_letter_4																																																																																			
41																		R_letter_5									R_letter_5	R_letter_5			R_letter_5			R_letter_5																							R_letter_5	R_letter_5			R_letter_5	R_letter_5	R_letter_5	R_letter_5																																																																																			
42																		R_letter_6									R_letter_6	R_letter_6			R_letter_6			R_letter_6																							R_letter_6	R_letter_6			R_letter_6	R_letter_6	R_letter_6	R_letter_6																																																																																			
43																		R_letter_7									R_letter_7	R_letter_7			R_letter_7			R_letter_7																							R_letter_7	R_letter_7			R_letter_7	R_letter_7	R_letter_7	R_letter_7																																																																																			
44																		R_letter_8									R_letter_8	R_letter_8			R_letter_8			R_letter_8																							R_letter_8	R_letter_8			R_letter_8	R_letter_8	R_letter_8	R_letter_8																																																																																			
45																		R_letter_9									R_letter_9	R_letter_9			R_letter_9			R_letter_9																							R_letter_9	R_letter_9			R_letter_9	R_letter_9	R_letter_9	R_letter_9																																																																																			
46																		R_letter_10									R_letter_10	R_letter_10			R_letter_10			R_letter_10																							R_letter_10	R_letter_10			R_letter_10	R_letter_10	R_letter_10	R_letter_10																																																																																			
47																		R_letter_11									R_letter_11	R_letter_11			R_letter_11			R_letter_11																							R_letter_11	R_letter_11			R_letter_11	R_letter_11	R_letter_11	R_letter_11																																																																																			
48																		R_letter_12									R_letter_12	R_letter_12			R_letter_12			R_letter_12																							R_letter_12	R_letter_12			R_letter_12	R_letter_12	R_letter_12	R_letter_12																																																																																			
49																		R_letter_13									R_letter_13	R_letter_13			R_letter_13			R_letter_13																							R_letter_13	R_letter_13			R_letter_13	R_letter_13	R_letter_13	R_letter_13																																																																																			
50																		R_letter_14									R_letter_14	R_letter_14			R_letter_14			R_letter_14																							R_letter_14	R_letter_14			R_letter_14	R_letter_14	R_letter_14	R_letter_14																																																																																			
51																		R_letter_15									R_letter_15	R_letter_15			R_letter_15			R_letter_15																							R_letter_15	R_letter_15			R_letter_15	R_letter_15	R_letter_15	R_letter_15																																																																																			
52																		R_letter_16									R_letter_16	R_letter_16			R_letter_16			R_letter_16																							R_letter_16	R_letter_16			R_letter_16	R_letter_16	R_letter_16	R_letter_16																																																																																			
53																		R_letter_17									R_letter_17	R_letter_17			R_letter_17			R_letter_17																							R_letter_17	R_letter_17			R_letter_17	R_letter_17	R_letter_17	R_letter_17																																																																																			
54																		R_letter_18									R_letter_18	R_letter_18			R_letter_18			R_letter_18																							R_letter_18	R_letter_18			R_letter_18	R_letter_18	R_letter_18	R_letter_18																																																																																			
55																		R_letter_19									R_letter_19	R_letter_19			R_letter_19			R_letter_19																							R_letter_19	R_letter_19			R_letter_19	R_letter_19	R_letter_19	R_letter_19																																																																																			
56																		R_letter_20									R_letter_20	R_letter_20			R_letter_20			R_letter_20																							R_letter_20	R_letter_20			R_letter_20	R_letter_20	R_letter_20	R_letter_20																																																																																			
57																		R_letter_21									R_letter_21	R_letter_21			R_letter_21			R_letter_21																							R_letter_21	R_letter_21			R_letter_21	R_letter_21	R_letter_21	R_letter_21																																																																																			
58																		R_letter_22									R_letter_22	R_letter_22			R_letter_22			R_letter_22																							R_letter_22	R_letter_22			R_letter_22	R_letter_22	R_letter_22	R_letter_22																																																																																			
59																		R_letter_23									R_letter_23	R_letter_23			R_letter_23			R_letter_23																							R_letter_23	R_letter_23			R_letter_23	R_letter_23	R_letter_23	R_letter_23																																																																																			
60																		R_letter_24									R_letter_24	R_letter_24			R_letter_24			R_letter_24																							R_letter_24	R_letter_24			R_letter_24	R_letter_24	R_letter_24	R_letter_24																																																																																			
61																		R_letter_25									R_letter_25	R_letter_25			R_letter_25			R_letter_25																							R_letter_25	R_letter_25			R_letter_25	R_letter_25	R_letter_25	R_letter_25																																																																																			
62		10					S_11			12	13	14			82			S_16							17							S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28					29													S_30	31	32	33	34	S_35	S_36	S_37	S_38	39	S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61	S_62			63	S_64	
63		10					S_11			12	13	14			83			S_16							17							S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28					29													S_30	31	32	33	34	S_35	S_36	S_37	S_38	39	S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61	S_62	R_stmts_1	63	S_64	
64		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																					84	32	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
65																		R_factor_0									R_factor_0	R_factor_0			R_factor_0			R_factor_0																							R_factor_0	R_factor_0			R_factor_0			R_factor_0	R_factor_0																																																																																			
66																																																																S_85																																																																																													
67		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																					86	32	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
68																						R_prog_0																																																																																																																																							
69																												S_87																																																																																																																																	
70																																																																S_88																																																																																													
71		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																					89	32	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
72																												R_expr_0																																	R_expr_0	R_expr_0									R_expr_0																																																																																			
73																								R_relop_2															R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2			R_relop_2	R_relop_2	R_relop_2																													R_relop_2	R_relop_2	R_relop_2	R_relop_2			R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2					R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2	R_relop_2			R_relop_2	R_relop_2	R_relop_2									
74																								R_relop_0															R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0			R_relop_0	R_relop_0	R_relop_0																													R_relop_0	R_relop_0	R_relop_0	R_relop_0			R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0					R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0	R_relop_0			R_relop_0	R_relop_0	R_relop_0									
75																								R_relop_1															R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1			R_relop_1	R_relop_1	R_relop_1																													R_relop_1	R_relop_1	R_relop_1	R_relop_1			R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1					R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1	R_relop_1			R_relop_1	R_relop_1	R_relop_1									
76		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																							90	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
77																		R_term_0									R_term_0																																	R_term_0	R_term_0			R_term_0			R_term_0	R_term_0																																																																																			
78																								R_arith_op_2															R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2			R_arith_op_2	R_arith_op_2	R_arith_op_2																													R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2			R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2					R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2	R_arith_op_2			R_arith_op_2	R_arith_op_2	R_arith_op_2									
79																								R_arith_op_0															R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0			R_arith_op_0	R_arith_op_0	R_arith_op_0																													R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0			R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0					R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0	R_arith_op_0			R_arith_op_0	R_arith_op_0	R_arith_op_0									
80		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																									91			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
81																								R_arith_op_1															R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1			R_arith_op_1	R_arith_op_1	R_arith_op_1																													R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1			R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1					R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1	R_arith_op_1			R_arith_op_1	R_arith_op_1	R_arith_op_1									
82																																																																																																																																																								S_92					
83																																																																																																																																																								R_stmts_0					
84																																																																S_93																																																																																													
85								R_putStmt_0															R_putStmt_0															R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0			R_putStmt_0	R_putStmt_0	R_putStmt_0																			R_putStmt_0									R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0			R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0					R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0			R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0	R_putStmt_0			R_putStmt_0	
86																																																																S_94																																																																																													
87																		R_factor_2									R_factor_2	R_factor_2			R_factor_2			R_factor_2																							R_factor_2	R_factor_2			R_factor_2			R_factor_2	R_factor_2																																																																																			
88								R_getStmt_0															R_getStmt_0															R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0			R_getStmt_0	R_getStmt_0	R_getStmt_0																			R_getStmt_0									R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0			R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0					R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0			R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0	R_getStmt_0			R_getStmt_0	
89																																																														S_95																																																																																															
90										96							S_73																																																	S_74			S_75					76																																																																															
91																										97			S_78			S_79	80	S_81																																																																																																																							
92								R_stmt_5															R_stmt_5															R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5			R_stmt_5	R_stmt_5	R_stmt_5																			R_stmt_5									R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5			R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5					R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5			R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5	R_stmt_5			R_stmt_5	
93								R_returnStmt_0															R_returnStmt_0															R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0			R_returnStmt_0	R_returnStmt_0	R_returnStmt_0																			R_returnStmt_0									R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0			R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0					R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0			R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0	R_returnStmt_0			R_returnStmt_0	
94								R_assignmentStmt_0															R_assignmentStmt_0															R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0			R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0																			R_assignmentStmt_0									R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0			R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0					R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0			R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0	R_assignmentStmt_0			R_assignmentStmt_0	
95		10									65			14							S_16															S_18	S_19	S_20	S_21	S_22	S_23	S_24	25	S_26	S_27	S_28																					98	32	33			S_35	S_36	S_37	S_38			S_40	S_41	S_42	S_43	S_44	S_45	S_46	S_47	S_48					S_49	S_50	S_51	S_52	S_53	S_54	S_55	S_56	S_57	S_58			S_59	S_60	S_61									
96																												R_expr'_0																																	R_expr'_0	R_expr'_0									R_expr'_0																																																																																			
97																		R_term'_0									R_term'_0																																	R_term'_0	R_term'_0			R_term'_0			R_term'_0	R_term'_0																																																																																			
98																																																																S_99																																																																																													
99								R_conditionalStmt_0															R_conditionalStmt_0															R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0			R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0																			R_conditionalStmt_0									R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0			R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0					R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0			R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0	R_conditionalStmt_0			R_conditionalStmt_0	

> Parsing Tokens : 

[int, main, (, ), {, int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Action: S_3 Stack: [0, int, 3] Input Queue: [main, (, ), {, int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Action: R_type_0 Stack: [0, type, 1] Input Queue: [main, (, ), {, int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Action: S_6 Stack: [0, type, 1, main, 6] Input Queue: [(, ), {, int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Action: S_7 Stack: [0, type, 1, main, 6, (, 7] Input Queue: [), {, int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Action: S_8 Stack: [0, type, 1, main, 6, (, 7, ), 8] Input Queue: [{, int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Action: S_9 Stack: [0, type, 1, main, 6, (, 7, ), 8, {, 9] Input Queue: [int, a, =, 5, ;, get, a, ;, put, a, ;, return, 0, ;, }, $]
Can't find action for state: 9 and input: int in parsing table !
Parsing failed !
