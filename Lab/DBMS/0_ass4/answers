SET LINESIZE 500;

CREATE TABLE DEPARTMENT(  
  DEPTCODE VARCHAR(10) PRIMARY KEY,  
  NAME VARCHAR(15) NOT NULL  
)
;

CREATE TABLE EMPLOYEE(  
  EMPCODE CHAR(5) PRIMARY KEY,  
  NAME VARCHAR(25) NOT NULL ,  
  ADDRESS VARCHAR(50) NOT NULL,  
  CITY VARCHAR(20) NOT NULL,  
  BASIC INTEGER NOT NULL ,  
  GRADE CHAR(1) NOT NULL ,  
  JN_DATE DATE DEFAULT(CURRENT_DATE),  
  DEPTCODE VARCHAR(10) NOT NULL,  
  FOREIGN KEY(DEPTCODE) REFERENCES DEPARTMENT(DEPTCODE),  
  CONSTRAINT NAME_UPPERCASE_CONSTRAINT CHECK(NAME = UPPER(NAME)),  
  CONSTRAINT BASIC_RANGE_CONSTRAINT CHECK(BASIC>=5000 AND BASIC<=9000),  
  CONSTRAINT GRADE_CONSTRAINT CHECK(GRADE IN ('A','B','C'))  
)
;

CREATE TABLE LEAVE_REGISTER(  
  EMPCODE CHAR(5) NOT NULL,  
  LEAVE_TYPE CHAR(5) NOT NULL,  
  FROM_DATE DATE NOT NULL,  
  TO_DATE DATE NOT NULL,  
  PRIMARY KEY(FROM_DATE,EMPCODE),  
  FOREIGN KEY(EMPCODE) REFERENCES EMPLOYEE(EMPCODE) ON DELETE CASCADE,  
  CONSTRAINT TYPE_CONSTRAINT CHECK(LEAVE_TYPE IN ('CL', 'EL', 'ML'))  
);

INSERT INTO DEPARTMENT VALUES('CSE', 'COPUTER SCIENCE');
INSERT INTO DEPARTMENT VALUES('PROD', 'PRODUCTION');
INSERT INTO DEPARTMENT VALUES('FIN', 'FINANCE');
INSERT INTO DEPARTMENT VALUES('FOOD', 'FOOD TECHNOLOGY');
INSERT INTO EMPLOYEE VALUES('EMP1', 'RAHUL MODAK', 'KOLKATA', 'KOLKATA', 6000, 'A', TO_DATE('2022-03-04', 'YYYY-MM-DD'), 'CSE');
INSERT INTO EMPLOYEE VALUES('EMP2', 'RAM', 'KOLKATA', 'KOLKATA', 8000, 'A', TO_DATE('2022-01-04','YYYY-MM-DD'), 'PROD');
INSERT INTO EMPLOYEE VALUES('EMP3', 'SHYAM', 'KOLKATA', 'KOLKATA', 7000, 'A', TO_DATE('2022-07-04','YYYY-MM-DD'), 'CSE');
INSERT INTO EMPLOYEE VALUES('EMP4', 'NAYAN', 'KOLKATA', 'KOLKATA', 7000, 'A', TO_DATE('2021-07-04','YYYY-MM-DD'), 'CSE');
INSERT INTO EMPLOYEE VALUES('EMP5', 'SAYAN', 'KOLKATA', 'KOLKATA', 7000, 'A', TO_DATE('2021-07-04','YYYY-MM-DD'), 'PROD');
INSERT INTO LEAVE_REGISTER VALUES('EMP1', 'CL', TO_DATE('2022-03-04','YYYY-MM-DD'), TO_DATE('2022-04-04','YYYY-MM-DD'));



SET SERVEROUTPUT ON;
DECLARE 
  emp_code EMPLOYEE.EMPCODE%TYPE := '&emp_code';
  emp_name EMPLOYEE.NAME%TYPE; 
BEGIN 
  SELECT NAME INTO emp_name FROM EMPLOYEE WHERE EMPCODE = emp_code; 
  -- if employee exists, display their name 
  DBMS_OUTPUT.PUT_LINE('Employee Name: ' || emp_name); 
EXCEPTION 
  WHEN NO_DATA_FOUND THEN 
    -- if employee does not exist, display suitable message 
    DBMS_OUTPUT.PUT_LINE('Employee with code ' || emp_code || ' does not exist.'); 
END;


DECLARE
   CURSOR emp_cur IS
      SELECT NAME
      FROM EMPLOYEE
      ORDER BY BASIC DESC
      FETCH FIRST 5 ROWS ONLY;
   emp_rec emp_cur%ROWTYPE;
BEGIN
   OPEN emp_cur;
   LOOP
      FETCH emp_cur INTO emp_rec;
      EXIT WHEN emp_cur%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(emp_rec.NAME);
   END LOOP;
   CLOSE emp_cur;
END;



-- Accept a department code from the user. Delete all the employee rows with that department code. Show how many rows have been deleted.

DECLARE
  v_dept_code DEPARTMENT.DEPTCODE%TYPE := '&dept_code'; -- accept department code from user
  v_deleted_rows NUMBER;
BEGIN
  -- delete employee rows with the provided department code and get the number of deleted rows
  DELETE FROM EMPLOYEE WHERE DEPTCODE = v_dept_code
  RETURNING COUNT(*) INTO v_deleted_rows;
  
  -- show the number of deleted rows
  DBMS_OUTPUT.PUT_LINE('Deleted ' || v_deleted_rows || ' employee rows with department code ' || v_dept_code);
END;
